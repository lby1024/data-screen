{"version":3,"sources":["static/header.png","component/header/index.tsx","component/container/index.tsx","component/container/use-scale.ts","component/fly-box/border.tsx","component/fly-box/fly-border.tsx","component/fly-box/index.tsx","component/chart-box/index.tsx","hooks/use-data.ts","utils/api.ts","component/chart-box/use-chart01.ts","component/chart-box/chart01.tsx","component/chart-box/use-chart02.ts","component/chart-box/chart02.tsx","component/chart-box/use-chart03.ts","component/chart-box/chart03.tsx","component/chart-box/use-chart04.ts","component/chart-box/chart04.tsx","component/chart-box/use-chart05.ts","component/chart-box/chart05.tsx","component/chart-box/use-chart06.ts","component/chart-box/use-chart07.ts","component/chart-box/chart0607.tsx","component/chart-box/use-chart08.ts","component/chart-box/use-chart09.ts","component/chart-box/chart0809.tsx","component/form/form02.tsx","component/form/form01.tsx","component/chart-box/use-chart10.ts","component/chart-box/use-chart11.ts","component/chart-box/use-chart12.ts","component/chart-box/chart1012.tsx","component/footer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["XHeader","children","Content","Title","styled","div","bg","XContainer","props","useState","scale","setScale","getScale","w","document","documentElement","clientWidth","body","h","clientHeight","useEffect","window","addEventListener","useScale","width","height","className","header","part02","part03","part04","part05","part06","part07","part08","p","XBorder","path","colorId","rectId","maskId","setId","id","uuid","init","cx","cy","fx","fy","r","offset","stopColor","stopOpacity","d","fill","href","strokeWidth","stroke","mask","defaultProps","FlyBorder","dur","rotate","repeatCount","FlyBox","fly","content","useRef","size","setSize","timer","setTimeout","current","sizeInit","clearTimeout","ref","XChartBox","title","useData","fn","time","data","setData","getData","a","num","max","min","Math","ceil","floor","random","dataChart01","Promise","resolve","x","series","dataChart02","series02","dataChart03","dataChart04","start","dataChart06","dataChart08","dataChart12","dataChart05","myData","getGeoCoordMap","geoCoordMap","name","value","arr","Object","keys","map","key","v","push","option","textStyle","color","xAxis","type","axisTick","show","axisLabel","formatter","split","join","axisLine","lineStyle","yAxis","splitLine","grid","y","x2","y2","XChart01","myChart","chart","o","setOption","echarts","useChart01","Chart","fontSize","legend","orient","right","bottom","itemWidth","itemHeight","left","top","containLabel","boundaryGap","itemStyle","LinearGradient","XChart02","useChart02","Box","interval","symbol","symbolSize","XChart03","item","index","useChart03","areaStyle","XChart04","useChart04","text","geo","zoom","areaColor","borderColor","coordinateSystem","val","rippleEffect","brushType","zlevel","shadowBlur","shadowColor","XChart05","china","useChart05","splice","backgroundColor","startAngle","radius","center","roseType","borderRadius","XChart0607","useChart06","chart06","useChart07","chart07","labelLine","label","XChart0809","useChart08","chart08","useChart09","chart09","col01","col02","col03","col04","XForm02","colSpan","row","rowNum","length","rowSpan","XRow","n","Row","XHead","Head","XForm01","align","position","borderWidth","XChart1012","useChart10","chart10","useChart11","chart11","useChart12","chart12","XFooter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.100d7cc0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header.9bb2eeb4.png\";","import FlyBox from \"component/fly-box\";\nimport { FC } from \"react\";\nimport styled from \"styled-components\";\nimport bg from \"../../static/header.png\"\n\nconst XHeader:FC = ({children}) => {\n\n    return <Content>\n        <Title>\n            <span>{children}</span>\n        </Title>\n    </Content>\n}\n\nexport default XHeader\n\nconst Content = styled.div`\n    height: 100%;\n    background-color: #000105;\n    background-image: url(${bg});\n    background-size: cover;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\nconst Title = styled.div`\n    background-color: #000517;\n    width: 500PX;\n    height: 100%;\n    color: #8abee4;\n    font-size: 32px;\n    text-align: center;\n    padding-top: 5px;\n    box-sizing: border-box;\n    border-bottom: 1px solid #243b71;\n    span {\n        background: linear-gradient(to top, #243b71, #8abee4);\n        background-clip: text;\n        -webkit-background-clip: text;\n        -moz-background-clip: text;\n        color: transparent;\n    }\n`","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { useScale } from \"./use-scale\";\n\nconst designWidth = 1600\nconst designHeight = 900\n\ninterface IXContainer {\n    header: any\n    part02: any\n    part03: any\n    part04: any\n    part05: any\n    part06: any\n    part07: any\n    part08: any\n}\n\nconst XContainer:FC<IXContainer> = (props) => {\n\n    const [scale] = useScale()    \n\n    return <Content scale={scale} width={designWidth} height={designHeight} >\n        <div className=\"part01\">{props.header}</div>\n        <div className=\"part02\">{props.part02}</div>\n        <div className=\"part03\">{props.part03}</div>\n        <div className=\"part04\">{props.part04}</div>\n        <div className=\"part05\">{props.part05}</div>\n        <div className=\"part06\">{props.part06}</div>\n        <div className=\"part07\">{props.part07}</div>\n        <div className=\"part08\">{props.part08}</div>\n    </Content>\n}\n\nexport default XContainer\n\nconst Content = styled.div<{\n    scale: number,\n    width: number,\n    height: number,\n}>`\n    width: ${p=>p.width}px;\n    height: ${p=>p.height}px;\n    transform: translate(-50%, -50%) scale(${p=>p.scale});\n    background-color: #010310;\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    display: grid;\n    grid-template-rows: 65.45px 497.84px 240px 1fr;\n    grid-template-columns: 247px 244px 571.39px 1fr;\n    grid-gap: 18px;\n    grid-template-areas: \n        \"part01 part01 part01 part01\"\n        \"part02 part03 part04 part05\"\n        \"part06 part06 part07 part05\"\n        \"part08 part08 part08 part08\";\n    .part01{\n        grid-area: part01;\n        /* background-color: #142342; */\n    }\n    .part02{\n        grid-area: part02;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        /* background-color: #142342; */\n    }\n    .part03{\n        grid-area: part03;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        /* background-color: #142342; */\n    }\n    .part04{\n        grid-area: part04;\n        /* background-color: #142342; */\n    }\n    .part05{\n        grid-area: part05;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        /* background-color: #142342; */\n    }\n    .part06{\n        grid-area: part06;\n        /* background-color: #142342; */\n    }\n    .part07{\n        grid-area: part07;\n        /* background-color: #142342; */\n    }\n    .part08{\n        grid-area: part08;\n        /* background-color: #142342; */\n    }\n\n`","import { useEffect, useState } from \"react\"\n\nconst designWidth = 1600\nconst designHeight = 900\n\nexport function useScale() {\n    const [scale, setScale] = useState(1)\n\n    function getScale() {\n        const w = document.documentElement.clientWidth || document.body.clientWidth\n        const h = document.documentElement.clientHeight || document.body.clientHeight\n        const scale = w/h <= designWidth/designHeight ? w/designWidth : h/designHeight\n        setScale(scale)\n    }\n\n    useEffect(() => {\n        getScale()\n        window.addEventListener('resize', () => {\n            getScale()\n        })\n    }, [])\n\n    return [scale]\n}","import { FC, useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\ninterface IFlyBorder {\n  width: number;\n  height: number;\n  className?: string;\n}\n\nconst XBorder: FC<IFlyBorder> = ({ width, height, className }) => {\n  const path = `M0 0 L${width} 0 L${width} ${height} L0 ${height} Z`;\n  const [{ colorId, rectId, maskId }, setId] = useState({\n    colorId: \"colorId\",\n    rectId: \"rectId\",\n    maskId: \"maskId\"\n  });\n\n  const init = () => {\n    const id = uuid();\n    setId({\n      colorId: `color-${id}`,\n      rectId: `rect-${id}`,\n      maskId: `mask-${id}`\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <svg width={width} height={height} className={className}>\n      <defs>\n        {/* 蒙版圆形的渐变色 */}\n        <radialGradient\n          id={colorId}\n          cx=\"50%\"\n          cy=\"50%\"\n          fx=\"50%\"\n          fy=\"50%\"\n          r=\"50%\"\n        >\n          <stop offset=\"0%\" stopColor=\"#fff\" stopOpacity=\"1\"></stop>\n          <stop offset=\"100%\" stopColor=\"#fff\" stopOpacity=\"0\"></stop>\n        </radialGradient>\n        {/* 矩形路径 */}\n        <path id={rectId} d={path} fill=\"none\" />\n        {/* 蒙版 */}\n        <mask id={maskId}>\n          <circle cx=\"0\" cy=\"0\" r={(width + height) / 8} fill={`url(#${colorId})`} />\n          <circle cx={width} cy=\"0\" r={(width + height) / 8} fill={`url(#${colorId})`} />\n          <circle cx={width} cy={height} r={(width + height) / 8} fill={`url(#${colorId})`} />\n          <circle cx=\"0\" cy={height} r={(width + height) / 8} fill={`url(#${colorId})`} />\n        </mask>\n      </defs>\n      {/*  */}\n      <use href={`#${rectId}`} strokeWidth=\"2\" stroke=\"#0d3666\" />\n      <use\n        href={`#${rectId}`}\n        strokeWidth=\"3\"\n        stroke=\"#4fd2dd\"\n        mask={`url(#${maskId})`}\n      />\n    </svg>\n  );\n};\n\nXBorder.defaultProps = {\n  width: 200,\n  height: 100\n};\n\nexport default XBorder;\n","import { FC, useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\ninterface IFlyBorder {\n  width: number;\n  height: number;\n  className?: string;\n}\n\nconst FlyBorder: FC<IFlyBorder> = ({ width, height, className }) => {\n  const path = `M0 0 L${width} 0 L${width} ${height} L0 ${height} Z`;\n  const [{ colorId, rectId, maskId }, setId] = useState({\n    colorId: \"colorId\",\n    rectId: \"rectId\",\n    maskId: \"maskId\"\n  });\n\n  const init = () => {\n    const id = uuid();\n    setId({\n      colorId: `color-${id}`,\n      rectId: `rect-${id}`,\n      maskId: `mask-${id}`\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <svg width={width} height={height} className={className}>\n      <defs>\n        {/* 蒙版圆形的渐变色 */}\n        <radialGradient\n          id={colorId}\n          cx=\"50%\"\n          cy=\"50%\"\n          fx=\"100%\"\n          fy=\"50%\"\n          r=\"50%\"\n        >\n          <stop offset=\"0%\" stopColor=\"#fff\" stopOpacity=\"1\"></stop>\n          <stop offset=\"100%\" stopColor=\"#fff\" stopOpacity=\"0\"></stop>\n        </radialGradient>\n        {/* 矩形路径 */}\n        <path id={rectId} d={path} fill=\"none\" />\n        {/* 蒙版 */}\n        <mask id={maskId}>\n          <circle\n            cx=\"0\"\n            cy=\"0\"\n            r={(width + height) / 5}\n            fill={`url(#${colorId})`}\n          >\n            <animateMotion\n              dur=\"3s\"\n              path={path}\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n      </defs>\n      {/*  */}\n      <use href={`#${rectId}`} strokeWidth=\"2\" stroke=\"#0d3666\" />\n      <use\n        href={`#${rectId}`}\n        strokeWidth=\"3\"\n        stroke=\"#4fd2dd\"\n        mask={`url(#${maskId})`}\n      />\n    </svg>\n  );\n};\n\nFlyBorder.defaultProps = {\n  width: 200,\n  height: 100\n};\n\nexport default FlyBorder;\n","import { FC, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport XBorder from \"./border\";\nimport FlyBoder from \"./fly-border\";\n\nconst Content = styled.div`\n  background-color: #0f113a;\n  position: relative;\n  .border {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\ninterface IFlybox {\n  className?: string\n  fly?: boolean\n}\n\nconst FlyBox: FC<IFlybox> = ({ children, className, fly }) => {\n  const content = useRef<any>();\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0\n  });\n\n  function sizeInit() {\n    const { clientHeight, clientWidth } = content.current;\n    setSize({\n      width: clientWidth,\n      height: clientHeight,\n    });\n  }\n\n  useEffect(() => {\n      const timer = setTimeout(() => {\n          sizeInit();\n          clearTimeout(timer)\n      }, 200)\n  }, [children]);\n\n  return (\n    <Content ref={content} className={className} >\n      {children}\n      {\n        fly \n        ? <FlyBoder className=\"border\" width={size.width} height={size.height} />\n        : <XBorder className=\"border\" width={size.width} height={size.height} /> \n      }\n    </Content>\n  );\n};\n\nFlyBox.defaultProps = {\n  fly: false\n}\n\nexport default FlyBox;\n","import FlyBox from \"component/fly-box\";\nimport { FC } from \"react\";\nimport styled from \"styled-components\";\n\ninterface IXChartBox {\n    title: string\n    className?: string\n    fly?: boolean\n}\n\nconst XChartBox:FC<IXChartBox> = ({title, children, className, fly}) => {\n    return <FlyBox className={className} fly={fly}  >\n        <Content>\n            <div className=\"title\" >{title}</div>\n            <div className=\"pan\">{children}</div>\n        </Content>\n    </FlyBox>\n}\n\nexport default XChartBox\n\nconst Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    .title{\n        color: #fff;\n        border: 1px solid #0a5299;\n        border-top: 0;\n        border-radius: 0 0 3px 3px;\n        height: 30.22px;\n        line-height: 30.22px;\n        box-sizing: border-box;\n        padding: 0 18.5px;\n        font-size: 14px;\n    }\n    .pan {\n        min-height: 100px;\n    }\n`","import { dataChart03, IData03 } from \"utils/api\";\nimport { useEffect, useState } from \"react\";\n\ntype TFn = () => Promise<any>\n\nexport function useData<T>(fn: TFn, time=3000) {\n    const [data, setData] = useState<T|null>(null)\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    async function getData() {\n        const data: T = await fn()\n        setData(data)\n        const timer = setTimeout(() => {\n            getData()\n            clearTimeout(timer)\n        }, time)\n    }\n\n    return [data]\n}","export interface IData {\n    x: string[]\n    series: number[]\n}\n\nexport function num(max: number, min=10) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值\n}\n\nexport function dataChart01(): Promise<IData> {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve({\n                x: ['金牛', '青羊', '锦江', '成华', '龙泉', '郫都', '新都', '双流', '大丰'],\n                series: [num(50), num(50), num(50), num(50), num(50), num(50), num(50), num(50), num(50)]\n            })\n        }, 500)\n    })\n}\n\nexport interface IData02 extends IData {\n    series02: number[]\n}\n\nexport function dataChart02(): Promise<IData02> {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve({\n                x: ['金牛', '青羊', '锦江', '成华', '龙泉', '郫都', '新都', '双流', '大丰'],\n                series: [num(50), num(50), num(50), num(50), num(50), num(50), num(50), num(50), num(50)],\n                series02: [num(50), num(50), num(50), num(50), num(50), num(50), num(50), num(50), num(50)]\n            })\n        }, 500)\n    })\n}\n\ntype TSeriesItem = number[]\n\nexport interface IData03 {\n    x: (string|number)[],\n    series: TSeriesItem[]\n}\n\n\nexport function dataChart03(): Promise<IData03> {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve({\n                x: ['2013','2014','2015', '2016', '2017', '2018', '2019', '2020', '2021'],\n                series: [\n                    [num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100],\n                    [num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100],\n                    [num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100],\n                    [num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100],\n                    [num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100],\n                ],\n            })\n        }, 500)\n    })\n}\n\nexport function dataChart04(): Promise<IData03> {\n    const start = num(90)/100\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve({\n                x: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24],\n                series: [\n                    [start, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, start],\n                ],\n            })\n        }, 500)\n    })\n}\n\nexport function dataChart06(): Promise<IData03> {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve({\n                x: ['入室抢劫', '当街偷盗', '团伙诈骗', '刑事案件', '民事案件'],\n                series: [\n                    [num(200), num(200), num(200), num(200), num(200)],\n                ],\n            })\n        }, 500)\n    })\n}\n\nexport function dataChart08(): Promise<IData03> {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve({\n                x: ['二仙桥','九眼桥','升仙湖','玉林路','盐道街','抚琴路','三瓦窑','东坡路'],\n                series: [\n                    [num(200), num(200), num(200), num(200), num(200), num(200), num(200), num(200)],\n                ],\n            })\n        }, 500)\n    })\n}\n\nexport function dataChart12(): Promise<IData03> {\n    const start = num(90)/100\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve({\n                x: [0, 18, 28, 38, 48, 58, 68, 78],\n                series: [\n                    [start, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, num(90)/100, start],\n                ],\n            })\n        }, 500)\n    })\n}\n\n\nexport interface IPositon {\n    name: string,\n    value: number[]\n}\n\nexport function dataChart05(): Promise<IPositon[][]> {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve([\n                [...myData],\n                [...getGeoCoordMap(geoCoordMap)]\n            ])\n        }, 500)\n    })\n}\n\nvar myData = [\n    { name: \"四川省\", value: [104.065735, 30.659462, 300] },\n    { name: \"北京\", value: [116.46,39.92, 380] },\n    { name: \"上海\", value: [121.48,31.22, 420] },\n    { name: \"重庆\", value: [106.54,29.59, 200] },\n    { name: \"广州\", value: [113.23,23.16, 323] }\n];\n\nfunction getGeoCoordMap(geoCoordMap: {[propname:string]: number[]}): IPositon[] {\n    const arr: IPositon[] = []\n    Object.keys(geoCoordMap).map(key => {\n        const v = geoCoordMap[key]\n        arr.push({\n            name: key,\n            value: [...v, num(150)]\n        })\n    })\n    return arr\n}\n\nvar geoCoordMap = {\n    '海门':[121.15,31.89],\n    '鄂尔多斯':[109.781327,39.608266],\n    '招远':[120.38,37.35],\n    '舟山':[122.207216,29.985295],\n    '齐齐哈尔':[123.97,47.33],\n    '盐城':[120.13,33.38],\n    '赤峰':[118.87,42.28],\n    '青岛':[120.33,36.07],\n    '乳山':[121.52,36.89],\n    '金昌':[102.188043,38.520089],\n    '泉州':[118.58,24.93],\n    '莱西':[120.53,36.86],\n    '日照':[119.46,35.42],\n    '胶南':[119.97,35.88],\n    '南通':[121.05,32.08],\n    '拉萨':[91.11,29.97],\n    '云浮':[112.02,22.93],\n    '梅州':[116.1,24.55],\n    '文登':[122.05,37.2],\n    '攀枝花':[101.718637,26.582347],\n    '威海':[122.1,37.5],\n    '承德':[117.93,40.97],\n    '厦门':[118.1,24.46],\n    '汕尾':[115.375279,22.786211],\n    '潮州':[116.63,23.68],\n    '丹东':[124.37,40.13],\n    '太仓':[121.1,31.45],\n    '曲靖':[103.79,25.51],\n    '烟台':[121.39,37.52],\n    '福州':[119.3,26.08],\n    '瓦房店':[121.979603,39.627114],\n    '即墨':[120.45,36.38],\n    '抚顺':[123.97,41.97],\n    '玉溪':[102.52,24.35],\n    '张家口':[114.87,40.82],\n    '阳泉':[113.57,37.85],\n    '莱州':[119.942327,37.177017],\n    '湖州':[120.1,30.86],\n    '汕头':[116.69,23.39],\n    '昆山':[120.95,31.39],\n    '宁波':[121.56,29.86],\n    '湛江':[110.359377,21.270708],\n    '揭阳':[116.35,23.55],\n    '荣成':[122.41,37.16],\n    '连云港':[119.16,34.59],\n    '葫芦岛':[120.836932,40.711052],\n    '常熟':[120.74,31.64],\n    '东莞':[113.75,23.04],\n    '河源':[114.68,23.73],\n    '淮安':[119.15,33.5],\n    '泰州':[119.9,32.49],\n    '南宁':[108.33,22.84],\n    '营口':[122.18,40.65],\n    '惠州':[114.4,23.09],\n    '江阴':[120.26,31.91],\n    '蓬莱':[120.75,37.8],\n    '韶关':[113.62,24.84],\n    '嘉峪关':[98.289152,39.77313],\n    '延安':[109.47,36.6],\n    '太原':[112.53,37.87],\n    '清远':[113.01,23.7],\n    '中山':[113.38,22.52],\n    '昆明':[102.73,25.04],\n    '寿光':[118.73,36.86],\n    '盘锦':[122.070714,41.119997],\n    '长治':[113.08,36.18],\n    '深圳':[114.07,22.62],\n    '珠海':[113.52,22.3],\n    '宿迁':[118.3,33.96],\n    '咸阳':[108.72,34.36],\n    '铜川':[109.11,35.09],\n    '平度':[119.97,36.77],\n    '佛山':[113.11,23.05],\n    '海口':[110.35,20.02],\n    '江门':[113.06,22.61],\n    '章丘':[117.53,36.72],\n    '肇庆':[112.44,23.05],\n    '大连':[121.62,38.92],\n    '临汾':[111.5,36.08],\n    '吴江':[120.63,31.16],\n    '石嘴山':[106.39,39.04],\n    '沈阳':[123.38,41.8],\n    '苏州':[120.62,31.32],\n    '茂名':[110.88,21.68],\n    '嘉兴':[120.76,30.77],\n    '长春':[125.35,43.88],\n    '胶州':[120.03336,36.264622],\n    '银川':[106.27,38.47],\n    '张家港':[120.555821,31.875428],\n    '三门峡':[111.19,34.76],\n    '锦州':[121.15,41.13],\n    '南昌':[115.89,28.68],\n    '柳州':[109.4,24.33],\n    '三亚':[109.511909,18.252847],\n    '自贡':[104.778442,29.33903],\n    '吉林':[126.57,43.87],\n    '阳江':[111.95,21.85],\n    '泸州':[105.39,28.91],\n    '西宁':[101.74,36.56],\n    '宜宾':[104.56,29.77],\n    '呼和浩特':[111.65,40.82],\n    '成都':[104.06,30.67],\n    '大同':[113.3,40.12],\n    '镇江':[119.44,32.2],\n    '桂林':[110.28,25.29],\n    '张家界':[110.479191,29.117096],\n    '宜兴':[119.82,31.36],\n    '北海':[109.12,21.49],\n    '西安':[108.95,34.27],\n    '金坛':[119.56,31.74],\n    '东营':[118.49,37.46],\n    '牡丹江':[129.58,44.6],\n    '遵义':[106.9,27.7],\n    '绍兴':[120.58,30.01],\n    '扬州':[119.42,32.39],\n    '常州':[119.95,31.79],\n    '潍坊':[119.1,36.62],\n    '台州':[121.420757,28.656386],\n    '南京':[118.78,32.04],\n    '滨州':[118.03,37.36],\n    '贵阳':[106.71,26.57],\n    '无锡':[120.29,31.59],\n    '本溪':[123.73,41.3],\n    '克拉玛依':[84.77,45.59],\n    '渭南':[109.5,34.52],\n    '马鞍山':[118.48,31.56],\n    '宝鸡':[107.15,34.38],\n    '焦作':[113.21,35.24],\n    '句容':[119.16,31.95],\n    '徐州':[117.2,34.26],\n    '衡水':[115.72,37.72],\n    '包头':[110,40.58],\n    '绵阳':[104.73,31.48],\n    '乌鲁木齐':[87.68,43.77],\n    '枣庄':[117.57,34.86],\n    '杭州':[120.19,30.26],\n    '淄博':[118.05,36.78],\n    '鞍山':[122.85,41.12],\n    '溧阳':[119.48,31.43],\n    '库尔勒':[86.06,41.68],\n    '安阳':[114.35,36.1],\n    '开封':[114.35,34.79],\n    '济南':[117,36.65],\n    '德阳':[104.37,31.13],\n    '温州':[120.65,28.01],\n    '九江':[115.97,29.71],\n    '邯郸':[114.47,36.6],\n    '临安':[119.72,30.23],\n    '兰州':[103.73,36.03],\n    '沧州':[116.83,38.33],\n    '临沂':[118.35,35.05],\n    '南充':[106.110698,30.837793],\n    '天津':[117.2,39.13],\n    '富阳':[119.95,30.07],\n    '泰安':[117.13,36.18],\n    '诸暨':[120.23,29.71],\n    '郑州':[113.65,34.76],\n    '哈尔滨':[126.63,45.75],\n    '聊城':[115.97,36.45],\n    '芜湖':[118.38,31.33],\n    '唐山':[118.02,39.63],\n    '平顶山':[113.29,33.75],\n    '邢台':[114.48,37.05],\n    '德州':[116.29,37.45],\n    '济宁':[116.59,35.38],\n    '荆州':[112.239741,30.335165],\n    '宜昌':[111.3,30.7],\n    '义乌':[120.06,29.32],\n    '丽水':[119.92,28.45],\n    '洛阳':[112.44,34.7],\n    '秦皇岛':[119.57,39.95],\n    '株洲':[113.16,27.83],\n    '石家庄':[114.48,38.03],\n    '莱芜':[117.67,36.19],\n    '常德':[111.69,29.05],\n    '保定':[115.48,38.85],\n    '湘潭':[112.91,27.87],\n    '金华':[119.64,29.12],\n    '岳阳':[113.09,29.37],\n    '长沙':[113,28.21],\n    '衢州':[118.88,28.97],\n    '廊坊':[116.7,39.53],\n    '菏泽':[115.480656,35.23375],\n    '合肥':[117.27,31.86],\n    '武汉':[114.31,30.52],\n    '大庆':[125.03,46.58]\n};\n\n","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart01, IData } from \"utils/api\";\n\nconst option: any = {\n    textStyle: {\n        // fontSize: 240,\n        color: '#79839E'\n    },\n    xAxis: {\n        type: 'category',\n        data: ['金牛', '青羊', '锦江', '成华', '龙泉', '郫都', '新都', '双流', '大丰'],\n        axisTick: {show: false},\n        axisLabel: {\n            formatter: (v: string) => v.split(\"\").join(\"\\n\")\n        },\n        axisLine: {\n            lineStyle: {color: '#083B70'}\n        },\n    },\n    yAxis: {\n        type: 'value',\n        splitLine: {show: false},\n        axisLine: {\n            show: true,\n            lineStyle: {color: '#083B70'}\n        },\n    },\n    grid: {\n        x: 40,\n        y: 40,\n        x2: 40,\n        y2: 40,\n    },\n    series: [{\n        data: [10, 20, 36, 41, 15, 26, 37, 18, 29],\n        type: 'bar',\n        \n    }]\n};\n\nexport function useChart01() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IData>(dataChart01)\n\n    useEffect(() => {\n        if(!data) return\n        let o = {...option}\n        o.xAxis.data = data.x\n        o.series[0].data = data.series\n        myChart.current?.setOption(o)        \n    }, [data])\n    \n\n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart01 } from \"./use-chart01\";\n\nconst XChart01:FC = () => {\n\n    const [chart] = useChart01()\n\n    return (\n        <XChartBox title=\"案发派出所管辖统计\">\n            <Chart ref={chart} />\n        </XChartBox>\n    )\n}\n\nexport default XChart01\n\nconst Chart = styled.div`\n    height: 176px;\n    width: 245px;\n`","import { useEffect, useRef } from \"react\";\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart02, IData02 } from \"utils/api\";\n\nconst option: any = {\n    textStyle: {\n        fontSize: 12,\n        color: '#79839E'\n    },\n    legend: {\n        data: ['破案排名1', '破案排名2'],\n        orient: 'vertical', // horizontal\n        right: 10,\n        bottom: \"bottom\",\n        itemWidth: 12,\n        itemHeight: 8,\n        textStyle: {color: \"#fff\", fontSize: 11}\n    },\n    grid: {\n        left: 10,\n        right: 10,\n        bottom: 40,\n        top: 20,\n        containLabel: true\n    },\n    xAxis: {\n        type: 'value',\n        boundaryGap: [0, 0.01],\n        axisLabel: {show: false},\n        splitLine: {show: false},\n    },\n    yAxis: {\n        type: 'category',\n        data: ['金牛', '青羊', '锦江', '成华', '龙泉', '郫都', '新都', '双流', '大丰'],\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: \"#79839E\",\n                width: 3\n            }\n        },\n        axisTick: {show: false},\n    },\n    series: [\n        {\n            name: '破案排名1',\n            type: 'bar',\n            data: [10, 20, 36, 41, 15, 26, 37, 18, 29],\n            itemStyle: {\n                color: new echarts.graphic.LinearGradient(0, 0, 1, 0,[\n                    {offset: 0, color: '#1e3bf9'},\n                    {offset: 1, color: '#039dff'}\n                ])\n            },\n        },\n        {\n            name: '破案排名2',\n            type: 'bar',\n            data: [10, 20, 36, 41, 15, 26, 37, 18, 29],\n            itemStyle: {\n                color: new echarts.graphic.LinearGradient(0, 0, 1, 0,[\n                    {offset: 0, color: '#b72be8'},\n                    {offset: 1, color: '#6a70e7'}\n                ])\n            },\n        }\n    ]\n};\n\nexport function useChart02() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IData02>(dataChart02, 5000)\n\n    useEffect(() => {\n        if(!data) return\n        let o = {...option}\n        o.xAxis.data = data.x\n        o.series[0].data = data.series\n        o.series[1].data = data.series02\n        myChart.current?.setOption(o) \n    }, [data])\n\n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart02 } from \"./use-chart02\";\n\nconst XChart02:FC = () => {\n\n    const [chart] = useChart02()\n\n    return (\n        <XChartBox title=\"案件破获排名\">\n            <Box>\n                <Chart ref={chart} />\n            </Box>\n        </XChartBox>\n    )\n}\n\nexport default XChart02\n\nconst Chart = styled.div`\n    height: 238px;\n    width: 245px;\n`\n\nconst Box = styled.div`\n    padding-bottom: 10px;\n`","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart03, IData03 } from \"utils/api\";\n\nconst option: any = {\n    textStyle: {\n        fontSize: 6,\n        color: '#79839E'\n    },\n    legend: {\n        data: ['抢劫', '醉驾', '盗窃', '故意杀人', '故意伤人'],\n        bottom: 10,\n        textStyle: {color: \"#fff\", fontSize: 9},\n        itemWidth: 15,\n        itemHeight: 8,\n    },\n    grid: {\n        left: 10,\n        right: 16,\n        top: 10,\n        bottom: 50,\n        containLabel: true\n    },\n    xAxis: {\n        type: 'category',\n        data: ['2013','2014','2015', '2016', '2017', '2018', '2019', '2020', '2021'],\n        boundaryGap: false,\n        splitLine: {show: true, lineStyle: {color: \"#073e78\"}},\n        axisTick: {show: false},\n        axisLine: {show: false},\n        axisLabel: {interval: 0, fontSize: 9},\n    },\n    yAxis: {\n        type: 'value',\n        splitLine: {show: true, lineStyle: {color: \"#073e78\"}},\n        axisLabel: {\n            fontSize: 9,\n            formatter: (v: number) => v*100+\"%\"\n        },\n    },\n    series: [\n        {\n            name: '抢劫',\n            data: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09],\n        },\n        {\n            name: '醉驾',\n            data: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09],\n        },\n        {\n            name: '盗窃',\n            data: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09],\n        },\n        {\n            name: '故意杀人',\n            data: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09],\n        },\n        {\n            name: '故意伤人',\n            data: [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09],\n        }\n    ].map(o => ({\n        ...o,\n        type: 'line',\n        symbol: \"circle\",\n        symbolSize: 6,\n        lineStyle: {width: 1}        \n    }))\n};\n\nexport function useChart03() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IData03>(dataChart03, 6000)\n\n    useEffect(() => {\n        if(!data) return\n        let o = {...option}\n        o.xAxis.data = data.x\n        data.series.map((item, index) => {\n            o.series[index].data = item\n        })\n        myChart.current?.setOption(o) \n    }, [data])\n\n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart03 } from \"./use-chart03\";\n\nconst XChart03:FC = () => {\n\n    const [chart] = useChart03()\n\n    return (\n        <XChartBox title=\"案件趋势分析\">\n            <Chart ref={chart} />\n        </XChartBox>\n    )\n}\n\nexport default XChart03\n\nconst Chart = styled.div`\n    height: 208px;\n    width: 242px;\n`","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart04, IData03 } from \"utils/api\";\n\nconst option: any = {\n    xAxis: {\n        type: 'category',\n        data: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24],\n        splitLine: {show: true, lineStyle: {color: \"#073e78\"}},\n        axisTick: {show: false},\n        axisLine: {show: false},\n        axisLabel: {interval: 0, fontSize: 9},\n        boundaryGap: false,\n    },\n    yAxis: {\n        type: 'value',\n        axisTick: {show: false},\n        axisLine: {show: false},\n        splitLine: {show: true, lineStyle: {color: \"#073e78\"}},\n        axisLabel: {\n            fontSize: 9,\n            formatter: (v: number) => v*100+\"%\"\n        },        \n    },\n    series: [{\n        data: [0.3, 0.2,0.7,0.5,0.3, 0.2,0.7,0.5,0.3, 0.2,0.7,0.5,0.3],\n        type: 'line',\n        symbol: \"circle\",\n        symbolSize: 6,\n        lineStyle: {width: 1},\n        areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {offset: 0, color: 'rgba(58,77,233,0.8)'}, \n                {offset: 1, color: 'rgba(58,77,233,0.3)'}\n            ])\n        }\n    }],\n    grid: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n        containLabel: true\n    },    \n};\n\nexport function useChart04() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IData03>(dataChart04, 7000)\n\n    useEffect(() => {\n        if(!data) return\n        let o = {...option}\n        o.xAxis.data = data.x\n        o.series[0].data = data.series[0]\n        myChart.current?.setOption(o) \n    }, [data])\n\n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart04 } from \"./use-chart04\";\n\nconst XChart04:FC = () => {\n\n    const [chart] = useChart04()\n\n    return (\n        <XChartBox title=\"案发时段分析\">\n            <Chart ref={chart} />\n        </XChartBox>\n    )\n}\n\nexport default XChart04\n\nconst Chart = styled.div`\n    width: 242px;\n    height: 208px;\n`","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart05, IPositon } from \"utils/api\";\nimport china from \"static/china.json\"\n\nconst option: any = {\n    title: {\n        text: \"此地图仅显示了中国的部分区域\",\n        bottom: 10,\n        right: 10,\n        textStyle: {fontSize: 12}\n    },\n    geo: {\n        map: \"CN\",\n        zoom: 1.5,\n        top: 100,\n        itemStyle: {\n            areaColor: \"#010d3e\",\n            borderColor: \"#0086cf\"\n        }\n    },\n    series: [\n        {\n            name: '案件数量', // series名称\n            // type: 'scatter', // series图表类型\n            type: 'effectScatter', // series图表类型\n            coordinateSystem: 'geo', // series坐标系类型\n            symbolSize: (val: number[]) => val[2] / 10, // 半径\n            rippleEffect: {brushType: 'stroke'},\n            zlevel: 1,\n            itemStyle: {\n                color: 'rgba(247, 161, 16, .7)',\n                shadowBlur: 10,\n                shadowColor: '#333'\n            },\n            data: [\n                { name: \"四川省\", value: [104.065735, 30.659462, 300] },\n                { name: \"北京\", value: [116.46,39.92, 190] },\n                { name: \"上海\", value: [121.48,31.22, 220] },\n                { name: \"重庆\", value: [106.54,29.59, 342] },\n                { name: \"广州\", value: [113.23,23.16, 223] }\n            ],\n        },{\n            name: '案件数量', // series名称\n            type: 'scatter', // series图表类型\n            coordinateSystem: 'geo', // series坐标系类型\n            symbolSize: (val: number[]) => val[2] / 10, // 半径\n            data: [],\n        },\n    ]\n};\n\nexport function useChart05() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IPositon[][]>(dataChart05)\n\n    useEffect(() => {\n        if(!data) return\n        const o = {...option}\n        o.series[0].data = data[0]\n        o.series[1].data = data[1]\n        myChart.current?.setOption(o)\n    }, [data])\n\n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n        echarts.registerMap('CN', china);\n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart05 } from \"./use-chart05\";\n\nconst XChart05:FC = () => {\n\n    const [chart] = useChart05()\n\n    return (\n        <Content>\n            <XChartBox title=\"全市犯罪人员籍贯分布地\" className=\"box\" fly={true} >\n                <div className=\"pan\" ref={chart} >\n\n                </div>\n            </XChartBox>\n        </Content>\n    )\n}\n\nexport default XChart05\n\nconst Content = styled.div`\n    .box {\n        background-color: #010310;\n    }\n    .pan{\n        height: 466px;\n        width: 569.39px;\n    }\n`","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart04, dataChart06, IData03 } from \"utils/api\";\n\nconst option: any = {\n    textStyle: {\n        color: '#79839E'\n    },\n    grid: {\n        left: 10,\n        right: 10,\n        bottom: 10,\n        top: 20,\n        containLabel: true\n    },\n    xAxis: {\n        type: 'category',\n        axisTick: {show: false},\n        axisLine: {\n            show: true,\n            lineStyle: {color: '#083B70'}\n        },\n        axisLabel: {\n            fontSize: 12,\n            formatter: (v: string) => {\n                let arr = v.split(\"\");\n                arr.splice(2, 0, \"\\n\");\n              return arr.join(\"\");\n            }\n        },\n        data: ['入室抢劫', '当街偷盗', '团伙诈骗', '刑事案件', '民事案件']\n    },\n    yAxis: {\n        type: 'value',\n        splitLine: {show: false},\n        axisLine: {\n            show: true,\n            lineStyle: {color: '#083B70'}\n        },\n    },\n    series: [{\n        data: [120, 200, 150, 80, 70],\n        type: 'bar',\n        itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1,[\n                {offset: 0, color: '#039dff'},\n                {offset: 1, color: '#1e3bf9'},\n            ])\n        },\n    }]\n};\n\nexport function useChart06() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IData03>(dataChart06, 9000)\n\n    useEffect(() => {\n        if(!data) return\n        let o = {...option}\n        o.xAxis.data = data.x\n        o.series[0].data = data.series[0]\n        myChart.current?.setOption(o) \n    }, [data])\n\n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n    }, [])\n\n    return [chart]\n}\n","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\n\nconst option: any = {\n    backgroundColor: \"#0f113a\",\n    textStyle: { fontSize: 10 },\n    legend: {\n        bottom: 10,\n        textStyle: {color: \"#fff\", fontSize: 10},\n        itemWidth: 15,\n        itemHeight: 8,        \n    },\n    series: [\n        {\n            startAngle:-10, //起始角度\n            type: 'pie',\n            radius: [15, 50],\n            center: ['50%', '44%'],\n            roseType: 'area',\n            itemStyle: { borderRadius: 2 },\n            data: [\n                {value: 36, name: '刑事'},\n                {value: 20, name: '民事'},\n                {value: 18, name: '经济'},\n                {value: 24, name: '其他'},\n            ]\n        }\n    ]\n};\n\nexport function useChart07() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    \n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n        myChart.current?.setOption(option) \n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart06 } from \"./use-chart06\";\nimport { useChart07 } from \"./use-chart07\";\n\nconst XChart0607:FC = () => {\n\n    const [chart06] = useChart06()\n    const [chart07] = useChart07()\n\n    return (\n        <XChartBox title=\"案发类型统计\">\n            <Content>\n                <div className=\"left\" ref={chart06} ></div>\n                <div className=\"right\" ref={chart07} ></div>\n            </Content>\n        </XChartBox>\n    )\n}\n\nexport default XChart0607\n\nconst Content = styled.div`\n    width: 480px;\n    height: 177px;\n    display: flex;\n    justify-content: space-between;\n    .left {\n        flex: 1;\n    }\n    .right {\n        flex: 1;\n    }\n`","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\n\nconst option: any = {\n    legend: {\n        orient: 'vertical',\n        left: 5,\n        bottom: 10,\n        textStyle: {color: \"#fff\", fontSize: 10},\n        itemWidth: 11,\n        itemHeight: 6,\n        height: 210,\n    },\n    series: [\n        {\n            name: '访问来源',\n            type: 'pie',\n            radius: '77%',\n            center: ['65%', '44%'],\n            labelLine: {\n                show: false\n            },\n            label: {\n                show: false,\n            },\n            data: [\n                {value: 30, name: '二仙桥 30%'},\n                {value: 10, name: '九眼桥 10%'},\n                {value: 20, name: '升仙湖 20%'},\n                {value: 5, name: '玉林路 5%'},\n                {value: 15, name: '盐道街 15%'},\n                {value: 12, name: '抚琴路 12%'},\n                {value: 11, name: '三瓦窑 11%'},\n                {value: 7, name: '东坡路 7%'},\n            ],\n        }\n    ]\n};\n\nexport function useChart08() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    \n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n        myChart.current?.setOption(option) \n    }, [])\n\n    return [chart]\n}\n","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart04, dataChart06, dataChart08, IData03 } from \"utils/api\";\n\nconst option: any = {\n    textStyle: {\n        color: '#79839E'\n    },\n    grid: {\n        left: 10,\n        right: 10,\n        bottom: 10,\n        top: 20,\n        containLabel: true\n    },\n    xAxis: {\n        type: 'category',\n        axisTick: {show: false},\n        axisLine: {\n            show: true,\n            lineStyle: {color: '#083B70'}\n        },\n        axisLabel: {\n            interval: 0, \n            fontSize: 9,\n            formatter: (v: string) => {\n                let arr = v.split(\"\");\n                arr.splice(2, 0, \"\\n\");\n              return arr.join(\"\");\n            }\n        },\n        data: ['二仙桥','九眼桥','升仙湖','玉林路','盐道街','抚琴路','三瓦窑','东坡路']\n    },\n    yAxis: {\n        type: 'value',\n        splitLine: {show: false},\n        axisLine: {\n            show: true,\n            lineStyle: {color: '#083B70'}\n        },\n    },\n    series: [{\n        data: [120, 200, 150, 80, 70, 70, 70, 70],\n        type: 'bar',\n        itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1,[\n                {offset: 0, color: '#039dff'},\n                {offset: 1, color: '#1e3bf9'},\n            ])\n        },\n    }]\n};\n\nexport function useChart09() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IData03>(dataChart08, 11000)\n\n    useEffect(() => {\n        if(!data) return\n        let o = {...option}\n        o.xAxis.data = data.x\n        o.series[0].data = data.series[0]\n        myChart.current?.setOption(o) \n    }, [data])\n    \n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n        myChart.current?.setOption(option) \n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart08 } from \"./use-chart08\";\nimport { useChart09 } from \"./use-chart09\";\n\nconst XChart0809:FC = () => {\n\n    const [chart08] = useChart08()\n    const [chart09] = useChart09()\n\n    return (\n        <XChartBox title=\"案发街道统计\">\n            <Content>\n                <div className=\"left\" ref={chart08} ></div>\n                <div className=\"right\" ref={chart09} ></div>\n            </Content>\n        </XChartBox>\n    )\n}\n\nexport default XChart0809\n\nconst Content = styled.div`\n    width: 480px;\n    height: 177px;\n    display: flex;\n    justify-content: space-between;\n    .left {\n        flex: 1;\n    }\n    .right {\n        flex: 1;\n    }\n`","import { FC, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \"component/chart-box\";\n\nconst data = [\n    {\n        col01: '入室盗窃',\n        col02: ['翻窗入室', '撬门入室', '技术开锁', '撬防护栏'],\n        col03: [10,10,10,10],\n        col04: 40\n    },{\n        col01: '抢夺',\n        col02: ['摩托车飞车抢夺', '徒手抢夺'],\n        col03: [12,11],\n        col04: 23\n    },{\n        col01: '扒窃',\n        col02: ['公交车扒窃', '车站扒窃', '街面扒窃\t'],\n        col03: [15,15,15],\n        col04: 45\n    },{\n        col01: '诈骗',\n        col02: ['甩票子诈骗', '买手机诈骗'],\n        col03: [15,25,15],\n        col04: 40\n    }\n]\n\nconst XForm02:FC = () => {\n\n    return (\n        <XChartBox title=\"作案手段分析\">\n            <Content>\n                <table>\n                    <tr>\n                        <th colSpan={2}>类型</th>\n                        <th>单数</th>\n                        <th>总计</th>\n                    </tr>\n                    {\n                        data.map(row => {\n                            return row.col02.map((item, index) => {\n                                const rowNum = row.col02.length\n                                return <tr>\n                                    { index === 0 && <td rowSpan={rowNum} >{row.col01}</td>}\n                                    <td>{item}</td>\n                                    <td>{row.col03[index]}</td>\n                                    { index === 0 && <td rowSpan={rowNum} >{row.col04}</td> }\n                                </tr>\n                            })\n                        })\n                    }\n                </table>\n            </Content>\n        </XChartBox>\n    )\n}\n\nexport default XForm02\n\nconst Content = styled.div`\n    width: 480px;\n    height: 270px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    table {\n        border-collapse:collapse;\n        background-color: #1c2456;\n        font-size: 12px;\n        transform: translateY(-3px);\n        th {\n            width: 112px;\n            height: 46px;\n            font-size: 12px;\n            border: 1px solid #1a3571;\n            vertical-align: middle;\n            box-shadow: 0px 0px 20px #1a3571 inset;\n        }\n        td {\n            height: 18px;\n            line-height: 18px;\n            width: 112px;\n            text-align: center;\n            border: 1px solid #1a3571;\n            font-size: 12px;\n        }\n    }\n`","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \"component/chart-box\";\nimport { num } from \"utils/api\";\n\ninterface IXRow {\n    n: number\n}\n\nconst XRow: FC<IXRow> = ({n}) => {\n    return <Row>\n        <td>{2021-n}</td>\n        <td>{num(20)}</td>\n        <td>{num(20)}</td>\n        <td>{num(20)}</td>\n        <td>{num(20)}</td>\n        <td>{num(20)}</td>\n        <td>82</td>\n        <td>93</td>\n    </Row>\n}\n\nconst Row = styled.div`\n    td {\n        height: 29.75px;\n        line-height: 29.75px;\n        width: 59.34px;\n        text-align: center;\n        border: 1px solid #1a3571;\n        font-size: 12px;\n    }\n`\n\nconst XHead: FC = () => {\n    return <Head>\n        <th>年份</th>\n        <th>破案数</th>\n        <th>抓获嫌疑人</th>\n        <th>并串案件</th>\n        <th>现勘录入</th>\n        <th>视侦录入</th>\n        <th>合成案件数</th>\n        <th>合计</th>\n    </Head>\n}\n\nconst Head = styled.div`\n    th {\n        width: 59.34px;\n        height: 46.27px;\n        font-size: 12px;\n        border: 1px solid #1a3571;\n        vertical-align: middle;\n        box-shadow: 0px 0px 20px #1a3571 inset;\n    }\n`\n\nconst XForm01:FC = () => {\n\n    return (\n        <XChartBox title=\"往年战果数对比\">\n            <Content>\n                <table>\n                    <XHead />\n                    {\n                        [0, 1, 2].map(item => <XRow n={item} key={item} />)\n                    }\n                </table>\n            </Content>\n        </XChartBox>\n    )\n}\n\nexport default XForm01\n\nconst Content = styled.div`\n    width: 480px;\n    height: 210px;\n    padding-top: 30px;\n    box-sizing: border-box;\n    table {\n        border-collapse:collapse;\n        background-color: #1c2456;\n    }\n`","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\n\nconst option = {\n    title:{\n        text:\"性别\",\n        left:\"center\",\n        top:\"32%\",\n        textStyle:{\n            color:\"#32a4fa\",\n            fontSize:24,\n            align:\"center\"\n        }\n    },\n    color: [\"#8d70f8\", \"#32a4fa\"],\n    legend: {\n        bottom: '5%',\n        left: 'center',\n        textStyle: {color: \"#fff\", fontSize: 12},\n        itemWidth: 15,\n        itemHeight: 8,  \n    },\n    series: [\n        {\n            name: '性别',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            center: [\"50%\", '40%'],\n            label: {\n                show: true,\n                fontSize: 12,\n                position: \"inside\",\n                color: \"#fff\",\n                formatter(v: any) {\n                    return v.value+\"%\"\n                }\n            },\n            labelLine: {\n                show: false\n            },\n            itemStyle: {\n                borderRadius: 1,\n                borderColor: '#0f113a',\n                borderWidth: 2\n            },\n            data: [\n                {value: 34, name: '女'},\n                {value: 66, name: '男'},\n            ]\n        }\n    ]\n};\n\nexport function useChart10() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    \n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n        myChart.current?.setOption(option) \n    }, [])\n\n    return [chart]\n}\n","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\n\nconst option = {\n    title:{\n        text:\"年龄段\",\n        left:\"center\",\n        top:\"32%\",\n        textStyle:{\n            color:\"#32a4fa\",\n            fontSize:20,\n            align:\"center\"\n        }\n    },\n    color: [\"#856bec\", \"#f46064\", \"#f28e1b\", \"#1bdb7c\", \"#32a4fa\"],\n    legend: {\n        bottom: 0,\n        left: 'center',\n        textStyle: {color: \"#fff\", fontSize: 10},\n        itemWidth: 15,\n        itemHeight: 8,  \n    },\n    series: [\n        {\n            name: '性别',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            center: [\"50%\", '40%'],\n            label: {\n                show: true,\n                fontSize: 12,\n                position: \"inside\",\n                color: \"#fff\",\n                formatter(v: any) {\n                    return v.value+\"%\"\n                }\n            },\n            labelLine: {\n                show: false\n            },\n            itemStyle: {\n                borderRadius: 1,\n                borderColor: '#0f113a',\n                borderWidth: 2\n            },\n            data: [\n                {value: 10, name: '10-20'},\n                {value: 20, name: '20-30'},\n                {value: 30, name: '30-40'},\n                {value: 28, name: '40-50'},\n                {value: 12, name: '50-60'},\n            ]\n        }\n    ]\n};\n\nexport function useChart11() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    \n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n        myChart.current?.setOption(option) \n    }, [])\n\n    return [chart]\n}\n","import { useEffect, useRef } from \"react\"\nimport * as echarts from \"echarts\";\nimport { useData } from \"hooks/use-data\";\nimport { dataChart04, dataChart12, IData03 } from \"utils/api\";\n\nconst option: any = {\n    title: {\n        text: \"犯罪年龄趋势图\",\n        top: 5,\n        left: \"26%\",\n        textStyle:{\n            color: \"#7ab6db\",\n            fontSize:12,\n            align:\"center\"\n        }\n    },\n    xAxis: {\n        type: 'category',\n        data: [0, 18, 28, 38, 48, 58, 68, 78],\n        splitLine: {show: true, lineStyle: {color: \"#073e78\"}},\n        axisTick: {show: false},\n        axisLine: {show: false},\n        axisLabel: {interval: 0, fontSize: 9},\n        boundaryGap: false,\n    },\n    yAxis: {\n        type: 'value',\n        axisTick: {show: false},\n        axisLine: {show: false},\n        splitLine: {show: true, lineStyle: {color: \"#073e78\"}},\n        axisLabel: {\n            fontSize: 9,\n            formatter: (v: number) => v*100+\"%\"\n        },        \n    },\n    series: [{\n        data: [0.3, 0.2,0.7,0.5,0.3, 0.2,0.7,0.5],\n        type: 'line',\n        symbol: \"circle\",\n        symbolSize: 6,\n        color: \"#f7a110\",\n        lineStyle: {width: 1},\n        areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {offset: 0, color: 'rgba(247,161,16,0.8)'}, \n                {offset: 1, color: 'rgba(247,161,16,0.3)'}\n            ])\n        }\n    }],\n    grid: {\n        left: 10,\n        right: 10,\n        top: 36,\n        bottom: 10,\n        containLabel: true\n    },    \n};\n\nexport function useChart12() {\n    const myChart = useRef<echarts.ECharts>()\n    const chart = useRef<any>()\n    const [data] = useData<IData03>(dataChart12, 7000)\n\n    useEffect(() => {\n        if(!data) return\n        let o = {...option}\n        o.xAxis.data = data.x\n        o.series[0].data = data.series[0]\n        myChart.current?.setOption(o) \n    }, [data])\n    \n    useEffect(() => { \n        myChart.current = echarts.init(chart.current)\n        myChart.current?.setOption(option) \n    }, [])\n\n    return [chart]\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport XChartBox from \".\";\nimport { useChart10 } from \"./use-chart10\";\nimport { useChart11 } from \"./use-chart11\";\nimport { useChart12 } from \"./use-chart12\";\n\nconst XChart1012:FC = () => {\n\n    const [chart10] = useChart10()\n    const [chart11] = useChart11()\n    const [chart12] = useChart12()\n\n    return (\n        <XChartBox title=\"犯罪人员年龄段分布\">\n            <Content>\n                <div className=\"left\" ref={chart10} ></div>\n                <div className=\"center\" ref={chart11} ></div>\n                <div className=\"right\" ref={chart12} ></div>\n            </Content>\n        </XChartBox>\n    )\n}\n\nexport default XChart1012\n\nconst Content = styled.div`\n    width: 570px;\n    height: 210px;\n    display: flex;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 10px;\n    .left {\n        flex: 1;\n    }\n    .center {\n        flex: 1;\n    }\n    .right {\n        flex: 1;\n        border: 1px solid #08397d;\n    }\n`","import { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst XFooter:FC = () => {\n    return <Content>\n        <span>以上数据均随机生成 @boyang</span>\n    </Content>\n}\n\nexport default XFooter\n\nconst Content = styled.div`\n    border: 1px solid #0e2d59;\n    border-radius: 3px;\n    background-color: #0c0d2b;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #fff;\n    font-size: 12px;\n    height: 100%;\n`","import XHeader from './component/header';\nimport XContainer from 'component/container';\nimport XChart01 from 'component/chart-box/chart01';\nimport XChart02 from 'component/chart-box/chart02';\nimport XChart03 from 'component/chart-box/chart03';\nimport XChart04 from 'component/chart-box/chart04';\nimport XChart05 from 'component/chart-box/chart05';\nimport XChart0607 from 'component/chart-box/chart0607';\nimport XChart0809 from 'component/chart-box/chart0809';\nimport XForm02 from 'component/form/form02';\nimport XForm01 from 'component/form/form01';\nimport XChart1012 from 'component/chart-box/chart1012';\nimport XFooter from 'component/footer';\n\nfunction App() {\n\n  return (\n    <XContainer \n      header={<XHeader>成都市公安局合成作战平台</XHeader>}\n      part02={[<XChart01 key={0}/>, <XChart02 key={1}/>]}\n      part03={[<XChart03 key={0}/>, <XChart04 key={2}/>]}\n      part04={<XChart05/>}\n      part05={[<XChart0607 key={0}/>, <XChart0809 key={1}/>, <XForm02 key={2} />]}\n      part06={<XForm01/>}\n      part07={<XChart1012 />}\n      part08={<XFooter />}\n    />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './static/reset.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}